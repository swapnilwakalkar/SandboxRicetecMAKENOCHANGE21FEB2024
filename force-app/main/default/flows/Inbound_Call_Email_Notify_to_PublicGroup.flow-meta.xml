<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_to_Queue_Members</name>
        <label>Send Email to Queue Members</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>AllEmailIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>New Inbound Call is assigned</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assign_Emails</name>
        <label>Assign Emails</label>
        <locationX>138</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>AllEmailIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Email_Id.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_User_Ids</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Validate_the_Case_Owner</name>
        <label>Validate the Case Owner</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Inbound_Call_assigned_to_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_Ids</targetReference>
            </connector>
            <label>Inbound Call assigned to Queue</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Inbound Call Email Notify to PublicGroup {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Inbound Call Email Notify to PublicGroup</label>
    <loops>
        <name>Loop_over_User_Ids</name>
        <label>Loop over User Ids</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <collectionReference>UserIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Email_Id</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Send_Email_to_Queue_Members</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Email_Id</name>
        <label>Get Email Id</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Emails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_over_User_Ids.UserOrGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Id</name>
        <label>Get Queue Id</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Validate_the_Case_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_Ids</name>
        <label>Get User Ids</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_over_User_Ids</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Queue_Id.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputReference>UserIds</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Call_Classification__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Sales</stringValue>
            </value>
        </filters>
        <filters>
            <field>Call_Classification__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Service</stringValue>
            </value>
        </filters>
        <filters>
            <field>Call_Classification__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Spares</stringValue>
            </value>
        </filters>
        <object>Inbound_Call_Report__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!$Record.Name}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>AllEmailIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserIds</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
</Flow>
